# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
   
  workflow_dispatch:
    inputs:
      publish_artifacts:
        description: 'Publish artifacts'
        required: true
        default: 'true'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    -  run: mvn spring-javaformat:apply
    -  run: mvn clean package -DskipTests --file pom.xml
    -  run: mkdir -p target 
    
    - if: github.event.inputs.publish_artifacts == 'true'
      name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
          name: artifact
          path: target/

    - name: docker login
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ruth99/github-actions-pet-clinic:${{ github.sha }}

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     role-to-assume: arn:aws:iam::187147323039:user/ruth/github-actions-ecr-push
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        DOCKER_REGISTRY: "187147323039.dkr.ecr.eu-north-1.amazonaws.com/sample"
        BASE_IMAGE_NAME: "pet-clinic"
        REGION: eu-north-1

      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
        docker build -t $IMAGE_TAG .
        docker tag $IMAGE_TAG:latest $DOCKER_REGISTRY/$BASE_IMAGE_NAME:$IMAGE_TAG
        docker push $DOCKER_REGISTRY/$BASE_IMAGE_NAME:$IMAGE_TAG
     
